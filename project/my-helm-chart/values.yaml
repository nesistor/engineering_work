global:
  imagePullSecrets:
    - name: gcr-json-key
  vault:
    address: "https://vault.example.com:8200"
    token: root_token
  redis:
    url: "redis:6379"

vault:
  image:
    repository: "hashicorp/vault"
    tag: "latest"
  environment:
    VAULT_DEV_ROOT_TOKEN_ID: root_token
  volumes:
    data:
      size: 1Gi  # Przy u≈ºyciu PVC
  ports:
    - name: http
      containerPort: 8200

authenticationService:
  image:
    repository: "us-central1-docker.pkg.dev/my-microservices-app/my-microservices-repo/auth-service"
    tag: "latest"
  environment:
    VAULT_ADDR: "{{ .Values.global.vault.address }}"
    VAULT_TOKEN: "{{ .Values.global.vault.token }}"
    REDIS_URL: "{{ .Values.global.redis.url }}"
  ports:
    - name: http
      containerPort: 8083

loggerService:
  image:
    repository: "us-central1-docker.pkg.dev/my-microservices-app/my-microservices-repo/logger-service"
    tag: "latest"

mailerService:
  image:
    repository: "us-central1-docker.pkg.dev/my-microservices-app/my-microservices-repo/mail-service"
    tag: "latest"
  environment:
    MAIL_HOST: mailhog
    MAIL_PORT: 1025
    FROM_NAME: "Karol"
    FROM_ADDRESS: "goappdm@gmail.com"
  ports:
    - name: http
      containerPort: 8085

userService:
  image:
    repository: "us-central1-docker.pkg.dev/my-microservices-app/my-microservices-repo/user-service"
    tag: "latest"
  environment:
    DSN: "host=postgres-users-service port=5432 user=postgres password=password dbname=users sslmode=disable"
    VAULT_ADDR: "{{ .Values.global.vault.address }}"
    VAULT_TOKEN: "{{ .Values.global.vault.token }}"
  ports:
    - name: http
      containerPort: 8081
    - name: grpc
      containerPort: 50001

adminService:
  image:
    repository: "us-central1-docker.pkg.dev/my-microservices-app/my-microservices-repo/admin-service"
    tag: "latest"
  environment:
    DSN: "host=postgres-admins-service port=5432 user=postgres password=password dbname=admins sslmode=disable"
    VAULT_ADDR: "{{ .Values.global.vault.address }}"
    VAULT_TOKEN: "{{ .Values.global.vault.token }}"
  ports:
    - name: http
      containerPort: 8082
    - name: grpc
      containerPort: 50002

redis:
  image:
    repository: "redis"
    tag: "7.0"

postgresUsers:
  image:
    repository: "postgres"
    tag: "14.0"
  environment:
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: password
    POSTGRES_DB: users
  volumes:
    data:
      size: 1Gi

postgresAdmins:
  image:
    repository: "postgres"
    tag: "14.0"
  environment:
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: password
    POSTGRES_DB: admins
  volumes:
    data:
      size: 1Gi

mongo:
  image:
    repository: "mongo"
    tag: "4.2.16-bionic"
  environment:
    MONGO_INITDB_DATABASE: logs
    MONGO_INITDB_ROOT_USERNAME: admin
    MONGO_INITDB_ROOT_PASSWORD: password
  volumes:
    data:
      size: 1Gi
