---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-user-service
  labels:
    app: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      containers:
        - name: user-service
          image: "{{ .Values.userService.image.repository }}:{{ .Values.userService.image.tag }}"
          ports:
            - containerPort: 8081
            - containerPort: 50001
          env:
            - name: DSN
              value: "{{ .Values.userService.environment.DSN }}"
            - name: VAULT_ADDR
              value: "{{ .Values.userService.environment.VAULT_ADDR }}"
            - name: VAULT_TOKEN
              value: "{{ .Values.userService.environment.VAULT_TOKEN }}"
          dependsOn:
            - postgres-users
            - vault

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-admin-service
  labels:
    app: admin-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-service
  template:
    metadata:
      labels:
        app: admin-service
    spec:
      containers:
        - name: admin-service
          image: "{{ .Values.adminService.image.repository }}:{{ .Values.adminService.image.tag }}"
          ports:
            - containerPort: 8082
            - containerPort: 50002
          env:
            - name: DSN
              value: "{{ .Values.adminService.environment.DSN }}"
            - name: VAULT_ADDR
              value: "{{ .Values.adminService.environment.VAULT_ADDR }}"
            - name: VAULT_TOKEN
              value: "{{ .Values.adminService.environment.VAULT_TOKEN }}"
          dependsOn:
            - postgres-admins
            - vault

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          ports:
            - containerPort: 6379

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres-users
  labels:
    app: postgres-users
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-users
  template:
    metadata:
      labels:
        app: postgres-users
    spec:
      containers:
        - name: postgres-users
          image: "{{ .Values.postgresUsers.image.repository }}:{{ .Values.postgresUsers.image.tag }}"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.postgresUsers.environment.POSTGRES_USER }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgresUsers.environment.POSTGRES_PASSWORD }}"
            - name: POSTGRES_DB
              value: "{{ .Values.postgresUsers.environment.POSTGRES_DB }}"
          volumeMounts:
            - name: postgres-users-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-users-data
          hostPath:
            path: ./db-data/postgres-users

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-postgres-admins
  labels:
    app: postgres-admins
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-admins
  template:
    metadata:
      labels:
        app: postgres-admins
    spec:
      containers:
        - name: postgres-admins
          image: "{{ .Values.postgresAdmins.image.repository }}:{{ .Values.postgresAdmins.image.tag }}"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.postgresAdmins.environment.POSTGRES_USER }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgresAdmins.environment.POSTGRES_PASSWORD }}"
            - name: POSTGRES_DB
              value: "{{ .Values.postgresAdmins.environment.POSTGRES_DB }}"
          volumeMounts:
            - name: postgres-admins-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-admins-data
          hostPath:
            path: ./db-data/postgres-admins

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-mongo
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: "{{ .Values.mongo.image.repository }}:{{ .Values.mongo.image.tag }}"
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_DATABASE
              value: "{{ .Values.mongo.environment.MONGO_INITDB_DATABASE }}"
            - name: MONGO_INITDB_ROOT_USERNAME
              value: "{{ .Values.mongo.environment.MONGO_INITDB_ROOT_USERNAME }}"
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: "{{ .Values.mongo.environment.MONGO_INITDB_ROOT_PASSWORD }}"
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
      volumes:
        - name: mongo-data
          hostPath:
            path: ./db-data/mongo
