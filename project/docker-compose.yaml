services:

  vault:
    image: 'vault:1.13.2'
    container_name: vault
    ports:    
      - "8200:8200"
    environment:
      VAULT_ADDR: http://0.0.0.0:8200
      VAULT_API_ADDR: http://localhost:8200
      VAULT_DEV_ROOT_TOKEN_ID: root_token
    cap_add:
      - IPC_LOCK
    volumes:
      - ./vault/data:/vault/file
    command: "server -dev -dev-root-token-id=root_token"
    networks:
      - vault-network

  authentication-service:
    build:
      context: ./../auth-service
      dockerfile: auth-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      REDIS_URL: "redis://redis:6379"
      VAULT_ADDR: "http://vault:8200"
      VAULT_TOKEN: root_token
    depends_on:
      - redis
      - vault
    networks:
      - vault-network

  user-service:
    build:
      context: ./../user-service
      dockerfile: ./../user-service/user-service.dockerfile
    restart: always
    ports:
      - "8082:80"
      - "50001:50001"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres-users port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
      VAULT_ADDR: "http://vault:8200"
      VAULT_TOKEN: root_token
    depends_on:
      - postgres-users
      - vault
    networks:
      - vault-network

  admin-service:
    build:
      context: ./../admin-service
      dockerfile: ./../admin-service/admin-service.dockerfile
    restart: always
    ports:
      - "8082:80"
      - "50001:50001"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres-admins port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"
      VAULT_ADDR: "http://vault:8200"
      VAULT_TOKEN: root_token
    depends_on:
      - postgres-users
      - vault
    networks:
      - vault-network

  redis:
    image: 'redis:7.0'
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - vault-network

  flyway:
    build:
      context: ./../migrations
      dockerfile: ./../migrations/migrations.dockerfile
    depends_on:
      - postgres-users
    restart: on-failure


  postgres-users:
    image: 'postgres:14.0'
    ports:
      - "5433:5432"
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres-users/:/var/lib/postgresql/data/

networks:
  vault-network:
    driver: bridge

volumes:
  vault_data:
